-- Adminer 4.7.6 PostgreSQL dump

\connect "baking";

DROP TABLE IF EXISTS "bakers";
CREATE TABLE "public"."bakers" (
    "baker" character varying(10) NOT NULL,
    "fullname" character varying(100),
    "age" integer,
    "occupation" character varying(100),
    "hometown" character varying(100),
    CONSTRAINT "bakers_pkey" PRIMARY KEY ("baker")
) WITH (oids = false);

INSERT INTO "bakers" ("baker", "fullname", "age", "occupation", "hometown") VALUES
('Antony',	'Antony Amourdoux',	30,	'Banker',	'London'),
('Briony',	'Briony Williams',	33,	'Full-time parent',	'Bristol'),
('Dan',	'Dan Beasley-Harling',	36,	'Full-time parent',	'London'),
('Imelda',	'Imelda McCarron',	33,	'Countryside recreation officer',	'County Tyrone'),
('Jon',	'Jon Jenkins',	47,	'Blood courier',	'Newport'),
('Karen',	'Karen Wright',	60,	'In-store sampling assistant',	'Wakefield'),
('Kim-Joy',	'Kim-Joy Hewlett',	27,	'Mental health specialist',	'Leeds'),
('Luke',	'Luke Thompson',	30,	'Civil servant/house and techno DJ',	'Sheffield'),
('Manon',	'Manon Lagrève',	26,	'Software project manager',	'London'),
('Rahul',	'Rahul Mandal',	30,	'Research scientist',	'Rotherham'),
('Ruby',	'Ruby Bhogal',	29,	'Project manager',	'London'),
('Terry',	'Terry Hartill',	56,	'Retired air steward',	'West Midlands');

DROP TABLE IF EXISTS "episodes";
CREATE TABLE "public"."episodes" (
    "id" integer NOT NULL,
    "title" character varying(100),
    "firstaired" date,
    "viewers7day" double precision,
    "signature" character varying(100),
    "technical" character varying(100),
    "showstopper" character varying(100),
    CONSTRAINT "episodes_pkey" PRIMARY KEY ("id")
) WITH (oids = false);

INSERT INTO "episodes" ("id", "title", "firstaired", "viewers7day", "signature", "technical", "showstopper") VALUES
(1,	'Biscuits',	'2018-08-28',	9.55,	'24 Regional Biscuits',	'8 Wagon Wheels',	'3D Biscuit Self-Portrait'),
(2,	'Cakes',	'2018-09-04',	9.31,	'16 Traybakes',	'Le Gâteau Vert',	'Chocolate Collar Cake'),
(3,	'Bread',	'2018-09-11',	8.91,	'12 Chelsea Buns',	'8 Non-Yeasted Garlic Naan Breads',	'Korovai'),
(4,	'Desserts',	'2018-09-18',	8.88,	'Meringue Roulade',	'Raspberry Blancmange with 12 Langues du Chat biscuits',	'Melting Chocolate Ball Dessert'),
(5,	'Spice',	'2018-09-25',	8.67,	'Ginger Cake',	'12 Ma''amoul',	'Spiced Biscuit Chandelier'),
(6,	'Pastry',	'2018-10-02',	9.3,	'12 Samosas',	'6 Puits D''amour',	'Shaped Banquet Pie'),
(7,	'Vegan',	'2018-10-09',	9.54,	'8 Savoury Vegan Tartlets',	'Vegan Tropical Fruit Pavlova',	'Vegan Celebratory Cake'),
(8,	'Danish',	'2018-10-16',	9.69,	'2 Smørrebrød',	'14 Æbleskiver',	'Kagemand/Kagekone'),
(9,	'Pâtisserie (Semi-final)',	'2018-10-23',	9.5,	'24 Madeleines',	'Torta Setteveli',	'Parisian Pâtisserie Window'),
(10,	'Final',	'2018-10-30',	10.34,	'12 Iced Doughnuts',	'6 Campfire Pita Breads',	'Landscape Dessert');

DROP TABLE IF EXISTS "favorites";
CREATE TABLE "public"."favorites" (
    "episodeid" integer NOT NULL,
    "baker" character varying(100) NOT NULL,
    CONSTRAINT "favorites_pkey" PRIMARY KEY ("episodeid", "baker"),
    CONSTRAINT "favorites_baker_fkey" FOREIGN KEY (baker) REFERENCES bakers(baker) NOT DEFERRABLE,
    CONSTRAINT "favorites_episodeid_fkey" FOREIGN KEY (episodeid) REFERENCES episodes(id) NOT DEFERRABLE
) WITH (oids = false);

INSERT INTO "favorites" ("episodeid", "baker") VALUES
(1,	'Briony'),
(2,	'Jon'),
(2,	'Dan'),
(3,	'Dan'),
(4,	'Rahul'),
(4,	'Jon'),
(5,	'Rahul'),
(6,	'Rahul'),
(6,	'Ruby'),
(7,	'Rahul'),
(8,	'Briony'),
(9,	'Kim-Joy');

DROP TABLE IF EXISTS "results";
CREATE TABLE "public"."results" (
    "episodeid" integer NOT NULL,
    "baker" character varying(100) NOT NULL,
    "result" character varying(20),
    CONSTRAINT "results_pkey" PRIMARY KEY ("episodeid", "baker"),
    CONSTRAINT "results_baker_fkey" FOREIGN KEY (baker) REFERENCES bakers(baker) NOT DEFERRABLE,
    CONSTRAINT "results_episodeid_fkey" FOREIGN KEY (episodeid) REFERENCES episodes(id) NOT DEFERRABLE
) WITH (oids = false);

INSERT INTO "results" ("episodeid", "baker", "result") VALUES
(1,	'Manon',	'star baker'),
(1,	'Imelda',	'eliminated'),
(2,	'Rahul',	'star baker'),
(2,	'Luke',	'eliminated'),
(3,	'Rahul',	'star baker'),
(3,	'Antony',	'eliminated'),
(4,	'Dan',	'star baker'),
(5,	'Terry',	'eliminated'),
(5,	'Kim-Joy',	'star baker'),
(5,	'Karen',	'eliminated'),
(6,	'Briony',	'star baker'),
(6,	'Dan',	'eliminated'),
(7,	'Kim-Joy',	'star baker'),
(7,	'Jon',	'eliminated'),
(8,	'Ruby',	'star baker'),
(8,	'Manon',	'eliminated'),
(9,	'Ruby',	'star baker'),
(9,	'Briony',	'eliminated');

DROP TABLE IF EXISTS "showstoppers";
CREATE TABLE "public"."showstoppers" (
    "episodeid" integer NOT NULL,
    "baker" character varying(100) NOT NULL,
    "make" character varying(100),
    CONSTRAINT "showstoppers_pkey" PRIMARY KEY ("episodeid", "baker"),
    CONSTRAINT "showstoppers_baker_fkey" FOREIGN KEY (baker) REFERENCES bakers(baker) NOT DEFERRABLE,
    CONSTRAINT "showstoppers_episodeid_fkey" FOREIGN KEY (episodeid) REFERENCES episodes(id) NOT DEFERRABLE
) WITH (oids = false);

INSERT INTO "showstoppers" ("episodeid", "baker", "make") VALUES
(1,	'Antony',	'Kilimanjaro Selfie'),
(1,	'Briony',	'Bristol Biscuit Selfie'),
(1,	'Dan',	'New Dad in Palm Springs'),
(1,	'Imelda',	'Seaside Selfie'),
(1,	'Jon',	'A Sailing Selfie by the Sea'),
(1,	'Karen',	'Rosewater and Cardamom "Holiday Selfie'),
(1,	'Kim-Joy',	'Me at Miyajima Shrine'),
(1,	'Luke',	'What Happens In Vegas...!'),
(1,	'Manon',	'Matcha and White Chocolate Ganache Japanese Selfie'),
(1,	'Rahul',	'First Spring in the UK'),
(1,	'Ruby',	'Gingerbread Marathon Selfie'),
(1,	'Terry',	'Brandy Snap Selfie'),
(2,	'Antony',	'Pistachio, Saffron and Rose Cake'),
(2,	'Briony',	'Chocolate Fudge and Salted Caramel Creation'),
(2,	'Dan',	'Dark Chocolate and Raspberry Birthday Cake'),
(2,	'Jon',	'Hawaiian Shirt Pina Colada Cake'),
(2,	'Karen',	'Strawberry Fayre Chocolate Cake'),
(2,	'Kim-Joy',	'Yuzu and Raspberry Genoise Cat Cake'),
(2,	'Luke',	'Raspberry and White Chocolate Collar Cake'),
(2,	'Manon',	'Almond Princess Cake'),
(2,	'Rahul',	'Chocolate Orange Layer Cake'),
(2,	'Ruby',	'Chocolate Orange "Jackson Pollock" Collar Cake'),
(2,	'Terry',	'Champagne and Strawberries Eiffel Tower Collar Cake'),
(3,	'Antony',	'Chocolate and Orange Adventure Korovai'),
(3,	'Briony',	'Happily Ever After Korovai'),
(3,	'Dan',	'Wedding Korovai'),
(3,	'Jon',	'Korovai Dydd Dewi Sant'),
(3,	'Karen',	'French Breakfast Wedding Korovai'),
(3,	'Kim-Joy',	'Orange, Cinnamon and Cranberry ''Kit-ovai'''),
(3,	'Manon',	'Fabergé Inspired Traditional Korovai'),
(3,	'Rahul',	'Garden Wedding Korovai'),
(3,	'Ruby',	'Mama and Papa''s Belated Wedding Korovai'),
(3,	'Terry',	'Garden Korovai'),
(4,	'Briony',	'Blood Orange & Amaretto Sticky Toffee Sphere'),
(4,	'Dan',	'Dan and the Giant Peach'),
(4,	'Jon',	'Lucy and Hannah''s Ballet Cake'),
(4,	'Karen',	'Chateau Du Chambord Framboise'),
(4,	'Kim-Joy',	'Melting Chocolate Galaxy'),
(4,	'Manon',	'White Chocolate Renaissance Surprise'),
(4,	'Rahul',	'Opera Cake with Kalash Inspired Dome'),
(4,	'Ruby',	'Chocolate Egg'),
(5,	'Briony',	'Turmeric Latte Chandelier'),
(5,	'Dan',	'Birthday Kaleidoscope for Constance'),
(5,	'Jon',	'Birthday Chandelier for Emily''s 21st'),
(5,	'Karen',	'Pontefract Girls'' School Reunion'),
(5,	'Kim-Joy',	'Christmas Spiced Ice Chandelier'),
(5,	'Manon',	'Art Deco Spiced Biscuit Chandelier'),
(5,	'Rahul',	'Durga Puja Cardamom Chandelier'),
(5,	'Ruby',	'Peacock Chandelier'),
(5,	'Terry',	'12 Days of Christmas Chandelier'),
(6,	'Briony',	'Down the Rabbit Hole" Banquet Pie'),
(6,	'Dan',	'Salmon Coulibiac'),
(6,	'Jon',	'Welsh Dragon Pie'),
(6,	'Kim-Joy',	'Silke the Vegetarian Mermaid'),
(6,	'Manon',	'What Has Poppy Eaten?'),
(6,	'Rahul',	'Butterfly Pie'),
(6,	'Ruby',	'Kohinoor Crown'),
(7,	'Briony',	'Hazelnut Mocha Cake'),
(7,	'Jon',	'Only Fools Eat Horses Cake'),
(7,	'Kim-Joy',	'Lavender & Lemon Fox Cake'),
(7,	'Manon',	'Spiced Apple Cake'),
(7,	'Rahul',	'Chocolate & Coconut Layer Cake with Raspberry Jam'),
(7,	'Ruby',	'Chocolate, Lemon & Coconut Cake'),
(8,	'Briony',	'Nana Pat Kagekone'),
(8,	'Kim-Joy',	'Off to the Opera Kagekone'),
(8,	'Manon',	'Birthday Girl Kagekone'),
(8,	'Rahul',	'Indian King Kagemand'),
(8,	'Ruby',	'Sister Kagekone'),
(9,	'Briony',	'British Tea to French Pâtisserie Window'),
(9,	'Kim-Joy',	'Flavourite Flavours Window Display'),
(9,	'Rahul',	'Classic Tribute to Pâtisserie Window'),
(9,	'Ruby',	'Parisian Un Bouquet de Fleurs Window Display'),
(10,	'Kim-Joy',	'Lost City of Atlantis Dessert Landscape'),
(10,	'Rahul',	'Edible Rock Garden'),
(10,	'Ruby',	'Magical Edible Landscape');

DROP TABLE IF EXISTS "signatures";
CREATE TABLE "public"."signatures" (
    "episodeid" integer NOT NULL,
    "baker" character varying(100) NOT NULL,
    "make" character varying(100),
    CONSTRAINT "signatures_pkey" PRIMARY KEY ("episodeid", "baker"),
    CONSTRAINT "signatures_baker_fkey" FOREIGN KEY (baker) REFERENCES bakers(baker) NOT DEFERRABLE,
    CONSTRAINT "signatures_episodeid_fkey" FOREIGN KEY (episodeid) REFERENCES episodes(id) NOT DEFERRABLE
) WITH (oids = false);

INSERT INTO "signatures" ("episodeid", "baker", "make") VALUES
(1,	'Antony',	'Turmeric and Caraway Goosnargh Cakes'),
(1,	'Briony',	'Apple Cider Empire Biscuits'),
(1,	'Dan',	'Lemon and Strawberry Shrewsburys'),
(1,	'Imelda',	'Cherry and White Chocolate Oatmeal Biscuits'),
(1,	'Jon',	'Aberffraw ''Creams'''),
(1,	'Karen',	'Yorkshire Perkins'),
(1,	'Kim-Joy',	'Orange Blossom York Biscuits'),
(1,	'Luke',	'Yorkshire Gingernuts'),
(1,	'Manon',	'Hazelnut Cornish Shortbread'),
(1,	'Rahul',	'Fennel and Coconut Pitcaithly Bannock'),
(1,	'Ruby',	'Masala Chai Devon Flats'),
(1,	'Terry',	'Lake District Ginger Shortbread'),
(2,	'Antony',	'Cardamom and Coconut Burfi Traybake'),
(2,	'Briony',	'Turron and Orange Traybake'),
(2,	'Dan',	'Black Forest Slice'),
(2,	'Jon',	'Lemon Meringue Traybake'),
(2,	'Karen',	'Almond and Marzipan Traybake with Rhubarb Jam'),
(2,	'Kim-Joy',	'Pandan Chiffon Cake with Palm Sugar Cream'),
(2,	'Luke',	'Lemon and Poppy Seed Traybake'),
(2,	'Manon',	'Rosemary and Honey Traybake'),
(2,	'Rahul',	'Lemon and Cardamom Traybake'),
(2,	'Ruby',	'Boozy Black Forest Traybake'),
(2,	'Terry',	'Rum and Raisin Traybake'),
(3,	'Antony',	'Decadent Breakfast Chelsea Buns'),
(3,	'Briony',	'Balsamic Strawberry Chelsea Buns'),
(3,	'Dan',	'Sticky Spiced Orange Chelsea Buns'),
(3,	'Jon',	'Cardiff City vs Chelsea Buns'),
(3,	'Karen',	'Peak District Christmas Chelsea Buns'),
(3,	'Kim-Joy',	'Pistachio and Cardamom Tangzhong Chelsea Buns'),
(3,	'Manon',	'Apricot, Cranberry and Marzipan Chai Chelsea Buns'),
(3,	'Rahul',	'Mango and Cranberry Chelsea Buns'),
(3,	'Ruby',	'Gujarela Chelsea Buns with Dates, Almonds and Raisins'),
(3,	'Terry',	'Tangy Citrus Sticky Chelsea Buns'),
(4,	'Briony',	'Treacle Tart Roulade'),
(4,	'Dan',	'Florida Roulade'),
(4,	'Jon',	'Mango and Passion Fruit Roulade'),
(4,	'Karen',	'Coffee Cream and Praline Roulade'),
(4,	'Kim-Joy',	'''Sweet Dreams'' Roulade'),
(4,	'Manon',	'Amarene and Kirsch Cherry Roulade'),
(4,	'Rahul',	'Rhubarb and Custard Roulade'),
(4,	'Ruby',	'Pina Colada Roulade'),
(5,	'Briony',	'Honey and Apricot Ginger Cake'),
(5,	'Dan',	'Ginger and Lemon Drip Cake'),
(5,	'Jon',	'Family Christmas Ginger Cake'),
(5,	'Karen',	'Bonfire Night Ginger Cake'),
(5,	'Kim-Joy',	'Stem Ginger Cake with Poached Pears'),
(5,	'Manon',	'Italian Meringue Ginger Cake'),
(5,	'Rahul',	'Bonfire Night Caramel Ginger Cake'),
(5,	'Ruby',	'Jamaican Me Crazy Ginger Cake'),
(5,	'Terry',	'Caramelised Pear and Stem Ginger Cake'),
(6,	'Briony',	'Home Comforts'),
(6,	'Dan',	'Festive Samosas'),
(6,	'Jon',	'A Romantic Dinner For Two, Samosa Style'),
(6,	'Kim-Joy',	'Flavours of India'),
(6,	'Manon',	'Samosas for Mum'),
(6,	'Rahul',	'Paneer Singara and Misti Singara'),
(6,	'Ruby',	'Traditional Samosas'),
(7,	'Briony',	'French Onion Tartlets and Celeriac & Apple Tartlets'),
(7,	'Jon',	'Garlic Mushroom Tartlets and Falafel & Hummus Tartlets'),
(7,	'Kim-Joy',	'Broccoli & Tomato Quiches and Mascarpone Squirrel Tartlets'),
(7,	'Manon',	'Summer & Winter Tartlets'),
(7,	'Rahul',	'Coriander Posto & Veg Tartlets and Ghugni Chaat Tartlets'),
(7,	'Ruby',	'Sage & Butternut Tartlets and ''Cheesy Greens'' Tartlets'),
(8,	'Briony',	'Spanish & West Country Smørrebrød'),
(8,	'Kim-Joy',	'Bumblebee Eggs & Fish Smørrebrød'),
(8,	'Manon',	'Cheese and Fruit Smørrebrød'),
(8,	'Rahul',	'Smoked Salmon & Roasted Vegetable Smørrebrød'),
(8,	'Ruby',	'Post-Gym Smørrebrød'),
(9,	'Briony',	'Mojito Madeleines & Espresso Martini Madeleines'),
(9,	'Kim-Joy',	'Ginger and Lemon Madeleines & Orange Bunny Madeleines'),
(9,	'Rahul',	'Lemon and Raspberry Madeleines & Orange Curd Madeleines'),
(9,	'Ruby',	'Pick Your Own Madeleines'),
(10,	'Kim-Joy',	'Amaretto Diplomat Filled Doughnuts & Lemon Ring Doughnuts'),
(10,	'Rahul',	'Mango Créme Pâtissière Filled Doughnuts & Spiced Orange Ring Doughnuts'),
(10,	'Ruby',	'Dulce De Leche Filled Doughnuts & Raspberry and Cardamom Ring Doughnuts');

DROP TABLE IF EXISTS "technicals";
CREATE TABLE "public"."technicals" (
    "episodeid" integer NOT NULL,
    "baker" character varying(100) NOT NULL,
    "rank" integer,
    CONSTRAINT "technicals_pkey" PRIMARY KEY ("episodeid", "baker"),
    CONSTRAINT "technicals_baker_fkey" FOREIGN KEY (baker) REFERENCES bakers(baker) NOT DEFERRABLE,
    CONSTRAINT "technicals_episodeid_fkey" FOREIGN KEY (episodeid) REFERENCES episodes(id) NOT DEFERRABLE
) WITH (oids = false);

INSERT INTO "technicals" ("episodeid", "baker", "rank") VALUES
(1,	'Antony',	12),
(1,	'Briony',	2),
(1,	'Dan',	4),
(1,	'Imelda',	11),
(1,	'Jon',	5),
(1,	'Karen',	6),
(1,	'Kim-Joy',	10),
(1,	'Luke',	8),
(1,	'Manon',	3),
(1,	'Rahul',	7),
(1,	'Ruby',	1),
(1,	'Terry',	9),
(2,	'Antony',	9),
(2,	'Briony',	5),
(2,	'Dan',	3),
(2,	'Jon',	1),
(2,	'Karen',	11),
(2,	'Kim-Joy',	4),
(2,	'Luke',	7),
(2,	'Manon',	6),
(2,	'Rahul',	2),
(2,	'Ruby',	10),
(2,	'Terry',	8),
(3,	'Antony',	8),
(3,	'Briony',	9),
(3,	'Dan',	6),
(3,	'Jon',	2),
(3,	'Karen',	5),
(3,	'Kim-Joy',	10),
(3,	'Manon',	3),
(3,	'Rahul',	4),
(3,	'Ruby',	7),
(3,	'Terry',	1),
(4,	'Briony',	5),
(4,	'Dan',	1),
(4,	'Jon',	3),
(4,	'Karen',	7),
(4,	'Kim-Joy',	6),
(4,	'Manon',	8),
(4,	'Rahul',	4),
(4,	'Ruby',	2),
(5,	'Briony',	6),
(5,	'Dan',	2),
(5,	'Jon',	7),
(5,	'Karen',	9),
(5,	'Kim-Joy',	4),
(5,	'Manon',	5),
(5,	'Rahul',	3),
(5,	'Ruby',	1),
(5,	'Terry',	8),
(6,	'Briony',	1),
(6,	'Dan',	6),
(6,	'Jon',	2),
(6,	'Kim-Joy',	5),
(6,	'Manon',	4),
(6,	'Rahul',	3),
(6,	'Ruby',	7),
(7,	'Briony',	5),
(7,	'Jon',	4),
(7,	'Kim-Joy',	6),
(7,	'Manon',	2),
(7,	'Rahul',	1),
(7,	'Ruby',	3),
(8,	'Briony',	1),
(8,	'Kim-Joy',	2),
(8,	'Manon',	4),
(8,	'Rahul',	5),
(8,	'Ruby',	3),
(9,	'Briony',	3),
(9,	'Kim-Joy',	2),
(9,	'Rahul',	4),
(9,	'Ruby',	1),
(10,	'Kim-Joy',	1),
(10,	'Rahul',	2),
(10,	'Ruby',	3);

-- 2020-11-04 05:56:09.884417+00
